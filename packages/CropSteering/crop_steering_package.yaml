# ================================================================
# Home Assistant Crop Steering Package
# Advanced Irrigation Management System for Home Assistant
# ================================================================
#
# This package provides a comprehensive crop steering irrigation system
# with advanced analytics, sensor fusion, ML predictions, and multi-crop support.
#
# REQUIREMENTS:
# - Home Assistant 2024.3 or later (for modern template format)
# - AppDaemon 4.2+ for automation logic (crop_steering_app.py)
# - VWC (Volumetric Water Content) sensors
# - EC (Electrical Conductivity) sensors
# - Irrigation control valves/pumps
#
# FEATURES:
# - 4-phase crop steering cycle (P0-P3)
# - Multi-crop profile support (Cannabis, Tomato, Lettuce, Basil, Custom)
# - Advanced sensor fusion with outlier detection
# - ML-based dryback prediction and pattern recognition
# - Comprehensive analytics and performance monitoring
# - MQTT remote monitoring and control
# - Anomaly detection and alerting
# - Growth stage prediction and recommendations
#
# PACKAGE STRUCTURE:
# - Core input helpers: cs_input_*.yaml files
# - Template sensors: cs_template_entities.yaml
# - Analytics engine: cs_analytics_*.yaml files
# - Sensor fusion: cs_sensor_fusion_*.yaml files
# - ML analytics: cs_ml_*.yaml files
# - MQTT monitoring: cs_mqtt_*.yaml files
# - Crop profiles: cs_crop_profiles.yaml
# - Dashboard cards: cards/ directory
#
# INSTALLATION:
# 1. Place this entire CropSteering directory in your packages/ folder
# 2. Add "packages: !include_dir_named packages" to configuration.yaml
# 3. Install AppDaemon and configure crop_steering_app.py
# 4. Configure your sensors in the input helpers
# 5. Restart Home Assistant
#
# CONFIGURATION:
# - Adjust sensor entity_ids in cs_input_texts.yaml
# - Set crop type in cs_input_selects.yaml
# - Configure irrigation parameters in cs_input_numbers.yaml
# - Enable features in cs_input_booleans.yaml
#
# ================================================================

# Include all input helper files for each domain
input_select: !include cs_input_selects.yaml
input_number: !include cs_input_numbers.yaml
input_boolean: !include cs_input_booleans.yaml
input_text: !include cs_input_texts.yaml
input_datetime: !include cs_input_datetimes.yaml

# Include template sensors individually to avoid circular references
template: 
  - !include cs_template_entities.yaml
  - !include cs_analytics_entities.yaml
  - !include cs_sensor_fusion_entities.yaml
  - !include cs_ml_analytics.yaml
  - !include cs_mqtt_monitoring.yaml
  - !include cs_crop_profiles.yaml

# ================================================================
# AUTOMATION NOTES:
# ================================================================
# Primary automation logic is handled by AppDaemon (crop_steering_app.py)
# 
# MQTT automations are in cs_mqtt_automations.yaml but must be included
# separately in configuration.yaml to avoid circular references:
#
# Add this to your configuration.yaml:
# automation mqtt_crop_steering: !include packages/CropSteering/cs_mqtt_automations.yaml
# 
# If not using AppDaemon, you would need to create additional automation
# files to replace the AppDaemon logic for:
# - Phase transitions (P0->P1->P2->P3)
# - Irrigation triggering based on VWC thresholds
# - Dryback monitoring and calculations
# - Shot counting and timing
# ================================================================
