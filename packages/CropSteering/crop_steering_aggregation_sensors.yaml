# Crop Steering Aggregation Sensors
# This file maps existing sensors to the ones needed by the crop steering system
# NOTE: This file's contents have been commented out as the aggregation logic
# is now handled by the template sensors defined in crop_steering_variables.yaml,
# which use the entities configured via the setup blueprint.

# Modern template integration format - List of sensors for inclusion
# - sensor:
#     # Map existing average sensors to the ones used by crop steering
#     - name: "cs_avg_vwc" # Use 'name'
#       unique_id: cs_avg_vwc # Add unique_id
#       state: "{{ states('sensor.f1_average_rockwool_vwc') | float(0) }}" # Use 'state', Added default filter
#       unit_of_measurement: "%"
#       icon: "mdi:water-percent" # Use 'icon'

#     - name: "cs_avg_ec" # Use 'name'
#       unique_id: cs_avg_ec # Add unique_id
#       state: "{{ states('sensor.f1_average_rockwool_ec') | float(0) }}" # Use 'state', Added default filter
#       unit_of_measurement: "mS/cm"
#       icon: "mdi:flash" # Use 'icon'

#     # Create min/max VWC sensors
#     - name: "cs_min_vwc" # Use 'name'
#       unique_id: cs_min_vwc # Add unique_id
#       state: > # Use 'state'
#           {% set values = [
#             states('sensor.vwc_r1_front') | float(999), # Assuming these IDs are correct
#             states('sensor.vwc_r1_back') | float(999),
#             states('sensor.vwc_r2_front') | float(999),
#             states('sensor.vwc_r2_back') | float(999),
#             states('sensor.vwc_r3_front') | float(999),
#             states('sensor.vwc_r3_back') | float(999)
#           ] %}
#           {% set filtered = values | reject('eq', 999) | list %}
#           {% if filtered | length > 0 %}
#             {{ filtered | min }}
#           {% else %}
#             0
#           {% endif %}
#       unit_of_measurement: "%"
#       icon: "mdi:water-percent" # Use 'icon'

#     - name: "cs_max_vwc" # Use 'name'
#       unique_id: cs_max_vwc # Add unique_id
#       state: > # Use 'state'
#           {% set values = [
#             states('sensor.vwc_r1_front') | float(0), # Assuming these IDs are correct
#             states('sensor.vwc_r1_back') | float(0),
#             states('sensor.vwc_r2_front') | float(0),
#             states('sensor.vwc_r2_back') | float(0),
#             states('sensor.vwc_r3_front') | float(0),
#             states('sensor.vwc_r3_back') | float(0)
#           ] %}
#           {% set filtered = values | reject('eq', 0) | list %}
#           {% if filtered | length > 0 %}
#             {{ filtered | max }}
#           {% else %}
#             0
#           {% endif %}
#       unit_of_measurement: "%"
#       icon: "mdi:water-percent" # Use 'icon'
